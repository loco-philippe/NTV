
; notation:
;     "Object(" *param ")" represent an Object defined by a list of parameters (param)
;     JsonArray(*param) represent a Json-array as defined in the Json grammar, *param is a list of Json-elements
;     JsonObject(*param) represent a Json-object as defined in the Json grammar, *param is a list of Json-members
;     JsonValue represent a Json-value as defined in the Json grammar

; NTVentity
;     NTVsingle object is defined by a NTVsingleValue, a NTVname and a NTVType
;     NTVlist   object is defined by a NTVlistValue,   a NTVname and a NTVType
NTVentity = NTVsingle / NTVlist
NTVsingle = "NTVsingle(" NTVsingleValue  NTVname  NTVsingleType ")"
NTVlist   = "NTVlist(" NTVlistValue  NTVname  NTVlistType ")"

NTVlistType     = NTVtype / Namespace
NTVsingleType   = NTVtype 
NTVlistValue    = *NTVentity
NTVsingleValue  = JsonValue
NTVname         = string
JsonValue       = string

; Namespace and NtvType

Namespace       = "Namespace(" NamespaceName  NamespaceParent ")" ; Namespace is nested
NamespaceParent = Namespace
NamespaceName   = [ ["$"] string "." ]  ; the global namespace is represented by an empty string
JsonNamespace   = JsonNamespaceParent NamespaceName
JsonNamespaceParent = JsonNamespace

NTVtype         = "NTVtype(" NTVtypeName  NamespaceParent [NTVtypeGen] ")"
NTVtypeGen      = NTVtype
NTVtypeName     = ["$"] string
JsonNTVtype     = JsonNamespace NTVtypeName   ; JsonNamespace is the JsonNamespace of the NamespaceParent

; Json representation of NTV entities
JsonNTV         = JsonNTVnamed / JsonNTVsimple
JsonNTVnamed    = "JsonObject(" JsonNTVname ":" JsonNTVvalue ")"  ; Json-object with a single member
JsonNTVsimple   = JsonNTVvalue
JsonNTVname     = NTVname / (NTVname JsonType) / JsonType
JsonType        = [singleSep / listSep] JsonNTVtype

; Json representation of NTVvalue
JsonNTVvalue    = JsonSingleValue / JsonListValue
JsonSingleValue = NTVsingleValue / JsonSingleValue
JsonListValue   = JsonArrayValue / JsonObjectValue
JsonArrayValue  = "JsonArray(" *JsonNTVrepr ")"
JsonObjectValue = "JsonObject(" *(JsonNTVname ":" JsonNTVvalue) ")"

singleSep   = ":"      ; NTVsingle separator 
listSep     = "::"     ; NTVlist separator 
string      = DQUOTE *CHAR DQUOTE

DQUOTE   = %x22          ; " double quote
CHAR     = %x01-7F